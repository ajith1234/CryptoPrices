<!DOCTYPE html>
<html lang="en">

<head>
    <% if (htmlWebpackPlugin.options.nodeModules) { %>
        <!-- Add `node_modules/` to global paths so `require` works properly in development -->
        <script>
            require('module').globalPaths.push('<%= htmlWebpackPlugin.options.nodeModules.replace(/\\/g, "\\\\") %>')
        </script>
        <% } %>
</head>

<body>
    <h1 stlye="font-size:100px;">Data Processing Thread</h1>



    <script>
        //Data process 

        //Node Modules imports
        const electron = require('electron')
        const ipcRenderer = electron.ipcRenderer
        const remote = require('electron').remote;

        const axios = require('axios')
        const CoinMarketCap = require('coinmarketcap-api')
        const client = new CoinMarketCap()

        //user details
        let name
        let email
        let password
        let auth = false
        const firebase = require('firebase')




        //Api Data store
        let Coins = []
        let CoinOptions = []

        //connecting to the firebase database
        let dbConfig = remote.getGlobal('config')
        firebase.initializeApp(dbConfig)




        //---------------------------IPCRenderer events-----------------------------------//


        ipcRenderer.on("get-coin-data", (event) => {
            console.log(this.Coins)
            ipcRenderer.send("send-coin-data", this.Coins)
        })


        ipcRenderer.on("get-price-data", (event, settings) => {
            let cData = CustomAPIcall(settings)

            ipcRenderer.send("send-price-data", cData)

        })

        ipcRenderer.on("signUp", (event, data) => {

        })

        ipcRenderer.on("Login", (event, data) => {

            firebase.auth().signInWithEmailAndPassword(data.email, data.password).catch(function(error) {

                var errorCode = error.code;
                var errorMessage = error.message;
                console.log(errorCode + errorMessage)
                remote.mainWindow.send("auth-error", errorMessage)
            });

        })

        //---------------------------FUNCTIONS-----------------------------------//

        //number Format Function
        const numberWithCommas = (x) => {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        //Function to get a coin IDs
        const sortForCoinId = (CoinsPrices) => {
            return CoinsPrices.map(a => a.id)
        }

        //Args = {limt, convert, start etc...}  <- Takes in this and return result array[] of customAPIcall
        const CustomAPIcall = (settings) => {
            const customcall = new CoinMarketCap()
            customcall.getTicker(settings)
                .then((data) => {
                    return data
                }).catch(console.error)
        }

        const dbActions = () => {

            }
            //---------------------------MAIN RUNTIME LOGIC-------------------------//
            //on load
        client.getTicker()
            .then((data) => {
                this.Coins = data
                this.CoinOptions = data.map(a => a.id)

            }).catch(console.error)

        //Setinterval to auto-update data
        setInterval(() => {
            client.getTicker()
                .then((data) => {
                    this.Coins = data

                }).catch(console.error)
        }, 10000)

        //Connect to DB
        dbActions()
        firebase.auth().onAuthStateChanged(function(user) {
            if (user) {
                this.auth = true
            } else {
                this.auth = false
            }
        });
    </script>

</body>

</html>